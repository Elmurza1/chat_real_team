// Подключение к WebSocket-серверу
let socket = new WebSocket("ws://127.0.0.1:8000/ws/chat/");

// Элементы DOM
const chatMessages = document.getElementById("chat_messages");
const chatForm = document.getElementById("chat_message_form");
const chatInput = chatForm.querySelector("input[name='content']");

// При успешном подключении к WebSocket
socket.onopen = function () {
    console.log("WebSocket соединение открыто.");
};

// При закрытии WebSocket-соединения
socket.onclose = function () {
    console.log("WebSocket соединение закрыто.");
};

// Функция для отправки сообщения
chatForm.addEventListener("submit", function (event) {
    event.preventDefault();  // Отмена стандартного отправления формы

    const message = chatInput.value.trim();
    if (message.length > 0) {
        socket.send(JSON.stringify({"message": message}));
        addMessageToChat("Вы", message);  // Добавляем сообщение как "Вы"
        chatInput.value = "";  // Очищаем поле ввода
    }
});

// Получение сообщения от сервера
socket.onmessage = function (event) {
    const data = JSON.parse(event.data);
    console.log("Сообщение от сервера:", data);

    if (data.message) {
        addMessageToChat("Собеседник", data.message);  // Добавляем сообщение от собеседника
    }
};

// Функция добавления нового сообщения в чат
function addMessageToChat(sender, message) {
    let messageElement = document.createElement("li");
    messageElement.classList.add("flex", "justify-end", "mb-4");

    messageElement.innerHTML = `
        <div class="message ${sender === "Вы" ? "sender" : "receiver"}">
            <strong>${sender}:</strong> ${message}
        </div>
    `;

    chatMessages.appendChild(messageElement);

    // Проверка, внизу ли чат, перед скроллингом
    const isAtBottom = chatMessages.scrollHeight - chatMessages.scrollTop === chatMessages.clientHeight;
    if (isAtBottom) {
        chatMessages.scrollTop = chatMessages.scrollHeight;  // Автоскроллинг вниз
    }
}
